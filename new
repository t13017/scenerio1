import { useState, useEffect } from "react";
import { useNavigate, useLocation } from "react-router-dom";
import { Container, Button, Form } from "react-bootstrap";
import { createCard, updateCard } from "../api";

function Create() {
    const navigate = useNavigate();
    const location = useLocation();
    const existingCard = location.state || {}; // Check if editing an existing card

    // State for form inputs
    const [formData, setFormData] = useState({
        title: "",
        description: "",
        image: null
    });

    // Prefill form when editing
    useEffect(() => {
        if (existingCard.id) {
            setFormData({
                title: existingCard.title,
                description: existingCard.description,
                image: null
            });
        }
    }, [existingCard]);

    // Handle input changes
    const handleChange = (e) => {
        const { name, value, files } = e.target;
        setFormData((prev) => ({
            ...prev,
            [name]: files ? files[0] : value // Handle file separately
        }));
    };

    // Handle form submission
    const handleSubmit = async (e) => {
        e.preventDefault();
        const data = new FormData();
        data.append("title", formData.title);
        data.append("description", formData.description);
        if (formData.image) data.append("image", formData.image);

        existingCard.id ? await updateCard(existingCard.id, data) : await createCard(data);
        navigate("/");
    };

    return (
        <Container>
            <h2>{existingCard.id ? "Edit Card" : "Create Card"}</h2>
            <Form onSubmit={handleSubmit}>
                <Form.Group>
                    <Form.Label>Title</Form.Label>
                    <Form.Control name="title" value={formData.title} onChange={handleChange} required />
                </Form.Group>
                <Form.Group>
                    <Form.Label>Description</Form.Label>
                    <Form.Control name="description" value={formData.description} onChange={handleChange} required />
                </Form.Group>
                <Form.Group>
                    <Form.Label>Image</Form.Label>
                    <Form.Control type="file" name="image" onChange={handleChange} />
                </Form.Group>
                <Button type="submit">{existingCard.id ? "Update" : "Create"}</Button>
            </Form>
        </Container>
    );
}

export default Create;
