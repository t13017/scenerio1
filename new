import { useEffect, useRef } from "react";
import { Container, Button, Form } from "react-bootstrap";
import { createCard, updateCard } from "../api";

function Create({ cardToEdit, onSubmit }) {
    const formRef = useRef(null);

    useEffect(() => {
        if (cardToEdit && formRef.current) {
            formRef.current.title.value = cardToEdit.title || "";
            formRef.current.description.value = cardToEdit.description || "";
        }
    }, [cardToEdit]);

    const handleSubmit = async (e) => {
        e.preventDefault();
        const formData = new FormData(formRef.current);
        
        if (cardToEdit?.id) {
            await updateCard(cardToEdit.id, formData);
        } else {
            await createCard(formData);
        }

        onSubmit(); // Callback to refresh data
    };

    return (
        <Container>
            <h2>{cardToEdit ? "Edit Card" : "Create Card"}</h2>
            <Form ref={formRef} onSubmit={handleSubmit}>
                <Form.Group>
                    <Form.Label>Title</Form.Label>
                    <Form.Control name="title" required />
                </Form.Group>
                <Form.Group>
                    <Form.Label>Description</Form.Label>
                    <Form.Control name="description" required />
                </Form.Group>
                <Form.Group>
                    <Form.Label>Image</Form.Label>
                    <Form.Control type="file" name="image" />
                </Form.Group>
                <Button type="submit">{cardToEdit ? "Update" : "Create"}</Button>
            </Form>
        </Container>
    );
}

export default Create;



import { useState } from "react";
import Create from "./Create";
import GetCard from "./GetCard"; 
import { getAllCards, deleteCard } from "../api";

function HomePage() {
    const [cards, setCards] = useState([]);
    const [editingCard, setEditingCard] = useState(null);

    const fetchCards = async () => {
        setCards(await getAllCards());
    };

    return (
        <div>
            <button onClick={() => setEditingCard(null)}>Create New Card</button>
            <Create cardToEdit={editingCard} onSubmit={fetchCards} />
            <div className="card-container">
                {cards.map((card) => (
                    <GetCard key={card.id} {...card} 
                        onEdit={setEditingCard} 
                        onDelete={async (id) => {
                            await deleteCard(id);
                            fetchCards();
                        }} 
                    />
                ))}
            </div>
        </div>
    );
}

export default HomePage;



import { useState, useEffect } from "react";
import { useNavigate, useLocation } from "react-router-dom";
import { Container, Button, Form } from "react-bootstrap";
import { createCard, updateCard } from "../api"; // Import API functions

function Create() {
    const navigate = useNavigate();
    const location = useLocation();
    const cardToEdit = location.state || {}; // Get existing data if updating

    // State to store form inputs
    const [title, setTitle] = useState("");
    const [description, setDescription] = useState("");
    const [image, setImage] = useState(null);

    // Fill form if editing
    useEffect(() => {
        if (cardToEdit.id) {
            setTitle(cardToEdit.title);
            setDescription(cardToEdit.description);
        }
    }, [cardToEdit]);

    // Handle form submission
    const handleSubmit = async (e) => {
        e.preventDefault();

        const formData = new FormData();
        formData.append("title", title);
        formData.append("description", description);
        if (image) formData.append("image", image);

        if (cardToEdit.id) {
            await updateCard(cardToEdit.id, formData); // Update existing card
        } else {
            await createCard(formData); // Create new card
        }

        navigate("/"); // Redirect to homepage after submission
    };

    return (
        <Container>
            <h2>{cardToEdit.id ? "Edit Card" : "Create Card"}</h2>
            <Form onSubmit={handleSubmit}>
                <Form.Group>
                    <Form.Label>Title</Form.Label>
                    <Form.Control value={title} onChange={(e) => setTitle(e.target.value)} required />
                </Form.Group>
                <Form.Group>
                    <Form.Label>Description</Form.Label>
                    <Form.Control value={description} onChange={(e) => setDescription(e.target.value)} required />
                </Form.Group>
                <Form.Group>
                    <Form.Label>Image</Form.Label>
                    <Form.Control type="file" onChange={(e) => setImage(e.target.files[0])} />
                </Form.Group>
                <Button type="submit">{cardToEdit.id ? "Update" : "Create"}</Button>
            </Form>
        </Container>
    );
}

export default Create;
