import { useEffect, useRef } from "react";
import { Container, Button, Form } from "react-bootstrap";
import { createCard, updateCard } from "../api";

function Create({ cardToEdit, onSubmit }) {
    const formRef = useRef(null);

    useEffect(() => {
        if (cardToEdit && formRef.current) {
            formRef.current.title.value = cardToEdit.title || "";
            formRef.current.description.value = cardToEdit.description || "";
        }
    }, [cardToEdit]);

    const handleSubmit = async (e) => {
        e.preventDefault();
        const formData = new FormData(formRef.current);
        
        if (cardToEdit?.id) {
            await updateCard(cardToEdit.id, formData);
        } else {
            await createCard(formData);
        }

        onSubmit(); // Callback to refresh data
    };

    return (
        <Container>
            <h2>{cardToEdit ? "Edit Card" : "Create Card"}</h2>
            <Form ref={formRef} onSubmit={handleSubmit}>
                <Form.Group>
                    <Form.Label>Title</Form.Label>
                    <Form.Control name="title" required />
                </Form.Group>
                <Form.Group>
                    <Form.Label>Description</Form.Label>
                    <Form.Control name="description" required />
                </Form.Group>
                <Form.Group>
                    <Form.Label>Image</Form.Label>
                    <Form.Control type="file" name="image" />
                </Form.Group>
                <Button type="submit">{cardToEdit ? "Update" : "Create"}</Button>
            </Form>
        </Container>
    );
}

export default Create;



import { useState } from "react";
import Create from "./Create";
import GetCard from "./GetCard"; 
import { getAllCards, deleteCard } from "../api";

function HomePage() {
    const [cards, setCards] = useState([]);
    const [editingCard, setEditingCard] = useState(null);

    const fetchCards = async () => {
        setCards(await getAllCards());
    };

    return (
        <div>
            <button onClick={() => setEditingCard(null)}>Create New Card</button>
            <Create cardToEdit={editingCard} onSubmit={fetchCards} />
            <div className="card-container">
                {cards.map((card) => (
                    <GetCard key={card.id} {...card} 
                        onEdit={setEditingCard} 
                        onDelete={async (id) => {
                            await deleteCard(id);
                            fetchCards();
                        }} 
                    />
                ))}
            </div>
        </div>
    );
}

export default HomePage;
